stargazer
library(stargazer)
stargazer(mydata)
setwd("/media/ayf/dump/writingswork/draftthesis")
mydata <- read.csv("data//2012.08.23.7daysTD.csv")
stargazer(mydata, flip = TRUE)
stargazer(mydata, flip = TRUE, out = "data/table7.txt", digits = 2)
stargazer(mydata, out = "data/table7.txt", digits = 2)
View(mydata)
aggregate(mydata, by = TreatmentShort)
with(mydata, aggregate(by = TreatmentShort))
with(mydata, aggregate(by = mysata$TreatmentShort))
with(mydata, aggregate(by = mydata$TreatmentShort))
aggregate(mydata, by = mydata$TreatmentShort)
aggregate(mydata, by = mydata$TreatmentShort, fun = mean)
aggregate(mydata, by = mydata$TreatmentShort, FUN = mean)
http://www.bbc.co.uk/sport/0/football/32874276
mydata$TreatmentShort
sapply(mydata, mean, na.rm=TRUE)
summary(data7)
summary(mydata)
colnames(mydata)
colnames <- read.table("data/2012.08.23.7daysTD.csv", header = F, nrows = 1)
View(colnames)
colnames <- read.table("data/2012.08.23.7daysTD.csv", header = F, nrows = 1, sep = ",")
View(colnames)
mydata <- read.csv("data//2012.08.23.7daysTD.csv")
mydata <- read.csv("data//2012.08.23.7daysTD.csv", header = F)
View(mydata)
rm(colnames)
rm(mydata)
mydata <- read.csv("data//2012.08.23.7daysTD.csv", header = F, skip = 1)
mycolnames <- read.table("data/2012.08.23.7daysTD.csv", header = F, nrows = 1, sep = ",")
View(mycolnames)
View(mydata)
summary(mydata, FUN=mean, by=TreatmentShort)
summary(mydata)
summary(mydata. by = TreatmentShort)
summary(mydata, by = TreatmentShort)
summary(mydata, by = V3)
colnames
colnames(mydata)
colnames(mydata)[3:]
colnames(mydata))3:)
colnames(mydata)(3:)
colnames(mydata)[3:100]
colnames(mydata)[3:100000]
colnames(mydata)[3:]
colnames(mydata)[-1]
colnames(mydata)[-1:2]
count(colnames(mydata))
size(colnames(mydata))
sizeof(colnames(mydata))
length(colnames(mydata))
for colno = 3:length(colnames(mydata)) print mycolnames[colno]
for colno in 3:length(colnames(mydata)) print mycolnames[colno]
for colno in 3:length(colnames(mydata)) { print mycolnames[colno]}
for (colno in 3:length(colnames(mydata))) { print mycolnames[colno]}
3:length(colnames(mydata)
)
for (colno in 3:length(colnames(mydata))) { print colno }
for (colno in 3:length(colnames(mydata))) { print colno ;}
for (colno in 3:length(colnames(mydata))) { print colno ; }
for (colno in 3:length(colnames(mydata))) { }
for (colno in 3:length(colnames(mydata))) { print (colno) ;}
for (colno in 3:length(colnames(mydata))) { print (mycolnames[colno]) ;}
for (colno in 3:length(colnames(mydata))) { cat
(mycolnames[colno]) ;}
for (colno in 3:length(colnames(mydata))) { cat (mycolnames[colno]) ;}
View(mycolnames)
for (colno in 3:length(colnames(mydata))) { print (mycolnames[colno]) }
for (colno in 3:length(colnames(mydata))) { mycolnames[colno] }
for (colno in 3:length(colnames(mydata))) { print (typeof(mycolnames[colno])) }
for (colno in 3:length(colnames(mydata))) { print (toString(mycolnames[colno])) }
library(fortunes; fortune(106)
library(fortunes); fortune(106)
typeof(mydata)
colnames(mydata)[3:length(colnames(mydata)]
(colnames(mydata))[3:length(colnames(mydata)]
3:length(colnames(mydata)
)
(colnames(mydata))[3:length(colnames(mydata))]
varlist <- (colnames(mydata))[3:length(colnames(mydata))]
models <- lapply(varlist, function(x) {
lm(substitute(V3 ~ i, list(i = as.name(x))), data = mydata)
})
lappy(models,summary)
lapply(models,summary)
models <- lapply(varlist, function(x) {
lm(substitute(i ~ V3, list(i = as.name(x))), data = mydata)
})
lapply(models,summary)
lm(V3 ~ V4, data = mydata)
lm(V2 ~ V4, data = mydata)
typeof(mydata$V2)
mydata$V2
aov(V2 ~ V4, data = mydata)
aov(V4 ~ V2, data = mydata)
lm(V4 ~ V2, data = mydata)
anova(lm(V4 ~ V2, data = mydata))
View(mycolnames)
models <- lapply(varlist, function(x) {
anova(lm(substitute(i ~ V2, list(i = as.name(x))), data = mydata))
})
lapply(models,summary)
models <- lapply(varlist, function(x) {
lm(substitute(V3 ~ i, list(i = as.name(x))), data = mydata)
})
models <- lapply(varlist, function(x) {
lm(substitute(i ~ V2, list(i = as.name(x))), data = mydata)
})
lapply(models,anova)
models <- lapply(varlist, function(x) {
lm(substitute(i ~ V2, list(i = as.name(x))), data = mydata, na.action=na.omit)
})
lapply(models,anova)
anova(lm(V4 ~ V2, data = mydata))
anova(lm(V5 ~ V2, data = mydata))
summary(lm(V5 ~ V2, data = mydata))
summary(lm(V6 ~ V2, data = mydata))
summary(kruskal.test(V5 ~ V2, data = mydata))
kruskal.test(V5 ~ V2, data = mydata)
dunn.test(V5 ~ V2, data = mydata)
library(dunn.test)
